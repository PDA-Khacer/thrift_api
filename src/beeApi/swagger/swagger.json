{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/manager/class": {
            "put": {
                "tags": [
                    "manager"
                ],
                "description": "create users",
                "operationId": "ManagerController.UpdateClass",
                "parameters": [
                    {
                        "in": "body",
                        "name": "sv",
                        "description": "The key for staticblock",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LopHocPhan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} 1"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/manager/class/add-student/{ma_lop}": {
            "put": {
                "tags": [
                    "manager"
                ],
                "description": "Add a student to class",
                "operationId": "ManagerController.AddStudentToClass",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ma_sv",
                        "description": "body for Class content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SinhVienVaLop"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} result"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/manager/class/add-students/": {
            "put": {
                "tags": [
                    "manager"
                ],
                "description": "Add students to class",
                "operationId": "ManagerController.AddStudentsToClass",
                "parameters": [
                    {
                        "in": "body",
                        "name": "sv",
                        "description": "body for Class content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SinhVienSlices"
                        }
                    },
                    {
                        "in": "path",
                        "name": "maLop",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} result"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/manager/class/create": {
            "post": {
                "tags": [
                    "manager"
                ],
                "description": "create Class",
                "operationId": "ManagerController.CreateClass",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Class content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LopHocPhan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} models.LopHocPhan[Ma]"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/manager/class/delete/{ma}": {
            "delete": {
                "tags": [
                    "manager"
                ],
                "description": "create users",
                "operationId": "ManagerController.DeleteClass",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ma",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} models.LopHocPhan[Ma]"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/manager/class/get-student/{ma}": {
            "get": {
                "tags": [
                    "manager"
                ],
                "description": "get Student by uid class",
                "operationId": "ManagerController.GetStudentInClass",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ma",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SinhVienSlices"
                        }
                    },
                    "403": {
                        "description": ":uid is empty"
                    }
                }
            }
        },
        "/manager/class/search/{key}": {
            "get": {
                "tags": [
                    "manager"
                ],
                "description": "create users",
                "operationId": "ManagerController.SearchStudent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "key",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} models.SinhVienSlices"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/manager/class/{ma}": {
            "get": {
                "tags": [
                    "manager"
                ],
                "description": "get user by uid",
                "operationId": "ManagerController.GetClass",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ma",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.LopHocPhan"
                        }
                    },
                    "403": {
                        "description": ":uid is empty"
                    }
                }
            }
        },
        "/manager/student": {
            "put": {
                "tags": [
                    "manager"
                ],
                "description": "create users",
                "operationId": "ManagerController.UpdateSinhVien",
                "parameters": [
                    {
                        "in": "body",
                        "name": "sv",
                        "description": "The key for staticblock",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SinhVien"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} 1"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/manager/student/create": {
            "post": {
                "tags": [
                    "manager"
                ],
                "description": "create users",
                "operationId": "ManagerController.CreateStudent",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for sinhvien content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SinhVien"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} models.SinhVien[Ma]"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/manager/student/delete/{ma}": {
            "delete": {
                "tags": [
                    "manager"
                ],
                "description": "create users",
                "operationId": "ManagerController.DeleteStudent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ma",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} models.SinhVien[Ma]"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/manager/student/{ma}": {
            "get": {
                "tags": [
                    "manager"
                ],
                "description": "get user by uid",
                "operationId": "ManagerController.GetStudent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ma",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SinhVien"
                        }
                    },
                    "403": {
                        "description": ":ma is empty"
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "get all Users",
                "operationId": "UserController.GetAll",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "description": "create users",
                "operationId": "UserController.CreateUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} models.User.Id"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/user/login": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Logs user into the system",
                "operationId": "UserController.Login",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The username for login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The password for login",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} login success"
                    },
                    "403": {
                        "description": "user not exist"
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Logs out current logged in user session",
                "operationId": "UserController.logout",
                "responses": {
                    "200": {
                        "description": "{string} logout success"
                    }
                }
            }
        },
        "/user/{uid}": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "get user by uid",
                "operationId": "UserController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uid",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ":uid is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "description": "update the user",
                "operationId": "UserController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uid",
                        "description": "The uid you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ":uid is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "description": "delete the user",
                "operationId": "UserController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uid",
                        "description": "The uid you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "uid is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.\u0026{437 SinhVien}": {
            "title": "\u0026{437 SinhVien}",
            "type": "object"
        },
        "models.LopHocPhan": {
            "title": "LopHocPhan",
            "type": "object",
            "properties": {
                "GiaoVien": {
                    "type": "string"
                },
                "Ma": {
                    "type": "string"
                },
                "Ten": {
                    "type": "string"
                }
            }
        },
        "models.Profile": {
            "title": "Profile",
            "type": "object",
            "properties": {
                "Address": {
                    "type": "string"
                },
                "Age": {
                    "type": "integer",
                    "format": "int64"
                },
                "Email": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                }
            }
        },
        "models.SinhVien": {
            "title": "SinhVien",
            "type": "object",
            "properties": {
                "GioiTinh": {
                    "type": "integer",
                    "format": "int32"
                },
                "HoTen": {
                    "type": "string"
                },
                "Ma": {
                    "type": "string"
                },
                "NgaySinh": {
                    "type": "string"
                },
                "Sdt": {
                    "type": "string"
                }
            }
        },
        "models.SinhVienSlices": {
            "title": "SinhVienSlices",
            "type": "array",
            "items": {
                "$ref": "#/definitions/models.\u0026{437 SinhVien}"
            }
        },
        "models.SinhVienVaLop": {
            "title": "SinhVienVaLop",
            "type": "object",
            "properties": {
                "MaLHP": {
                    "type": "string"
                },
                "MaSV": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "title": "User",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "Profile": {
                    "$ref": "#/definitions/models.Profile"
                },
                "Username": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "user",
            "description": "Operations about Users\n"
        },
        {
            "name": "manager",
            "description": "Operations about Users\n"
        }
    ]
}